name: 🛠️ Update README with TIL & Projects

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Fetch public repositories via GitHub API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 <<EOF
          import os, datetime, requests

          def get_recent_tils(root_dir="TIL", max_items=5):
              tils = []
              for dirpath, _, filenames in os.walk(root_dir):
                  for filename in filenames:
                      if filename.endswith(".md"):
                          parts = os.path.normpath(dirpath).split(os.sep)
                          if len(parts) >= 3:
                              year, month = parts[1], parts[2]
                              day = filename[:2]
                              try:
                                  date = datetime.date(int(year), int(month), int(day))
                                  with open(os.path.join(dirpath, filename), encoding="utf-8") as f:
                                      title = next((l.strip("# \n") for l in f if l.strip().startswith("#")), filename)
                                  link = os.path.join(dirpath, filename).replace("\\", "/")
                                  tils.append((date, title, link))
                              except:
                                  continue
              tils.sort(reverse=True)
              return tils[:max_items]

          def get_public_projects(user="MinHyeok-lee1"):
              headers = {"Authorization": f"token {os.getenv('GH_TOKEN')}"}
              url = f"https://api.github.com/users/{user}/repos?per_page=100&type=owner&sort=updated"
              r = requests.get(url, headers=headers)
              repos = r.json()
              result = []
              for repo in repos:
                  if not repo["private"] and any(tag in repo["name"].lower() for tag in ["projects"]):
                      result.append(f"[{repo['name']}]({repo['html_url']})")
              return result[:3]

          def insert_between(text, start, end, content):
              return text.split(start)[0] + start + "\n" + content + "\n" + end + text.split(end)[1]

          readme = open("README.md", encoding="utf-8").read()
          til_md = "\n".join([f"- [{t}]({l})" for _, t, l in get_recent_tils()]) or "(최근 TIL이 없습니다)"
          proj_md = "\n".join([f"- {p}" for p in get_public_projects()]) or "(표시할 프로젝트가 없습니다)"

          readme = insert_between(readme, "<!-- TIL-START -->", "<!-- TIL-END -->", til_md)
          readme = insert_between(readme, "<!-- PROJ-START -->", "<!-- PROJ-END -->", proj_md)

          with open("README.md", "w", encoding="utf-8") as f:
              f.write(readme)
          EOF

      - name: Commit and push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git diff --cached --quiet || git commit -m "📝 update: README with latest TIL & public projects"
          git push
